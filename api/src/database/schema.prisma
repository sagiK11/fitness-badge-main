generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MeasureUnitEnum {
  MINUTES
  SECONDS
  AMOUNT
  CENTIMETERS
}

enum Gender {
  MALE
  FEMALE
}

model School {
  id        String    @id @default(uuid())
  name      String    @unique
  teachers  Teacher[]
  students  Student[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Teacher {
  id           String        @id @default(uuid())
  firstName    String
  lastName     String
  email        String        @unique
  classrooms   Classroom[]
  yearsOfStudy YearOfStudy[]
  school       School        @relation(fields: [schoolId], references: [id])
  schoolId     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Student {
  id           String        @id @default(uuid())
  firstName    String
  lastName     String
  phone        String?
  tests        Test[]
  school       School        @relation(fields: [schoolId], references: [id])
  schoolId     String
  classrooms   Classroom[]
  yearsOfStudy YearOfStudy[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Classroom {
  id           String        @id @default(uuid())
  name         String        @unique
  gender       Gender        @default(FEMALE)
  teacher      Teacher[]      
  students     Student[]
  yearsOfStudy YearOfStudy[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Test {
  id         String       @id @default(uuid())
  grade      Float        @db.DoublePrecision
  score      String
  student    Student      @relation(fields: [studentId], references: [id])
  studentId  String
  category   TestCategory @relation(fields: [categoryId], references: [id])
  categoryId String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model TestCategory {
  id          String           @id @default(uuid())
  name        String
  tests       Test[]
  measureUnit MeasureUnitEnum @default(AMOUNT)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

model YearOfStudy {
  id         String      @id @default(uuid())
  yearName   String      @unique
  startDate  DateTime
  endDate    DateTime
  teachers   Teacher[]
  students   Student[]
  classrooms Classroom[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}
